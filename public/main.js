var app_ang=angular.module("todoApp",["ngResource","ngRoute","ngAnimate"]);angular.module("todoApp").run(function(){console.log("app is runing")}),angular.module("todoApp").config(["$routeProvider",function(a){a.when("/",{controller:"mainCtrl as main",templateUrl:"TodoList.html"}).otherwise({redirectTo:"/"})}]),angular.module("todoApp").directive("nipaDelBut",["Todo",function(a){return{restrict:"A",scope:{ind:"="},template:'<button class="delButton" id="del{{$index}}" ng-click="list.deleteTodo(todo)">x</button>',controller:function(){alert("dasda")}}}]),angular.module("todoApp").factory("Todo",["$resource",function(a){return a("/api/todo/:id",{id:"@id"},{update:{method:"PUT"}})}]),angular.module("todoApp").controller("TodoListCtrl",["$timeout","Todo",function(a,b){var c=this;c.nav={onGoing:{class:"active"},complete:{class:""},all:{class:""}},c.state={placeholderClassName:"",justDeleted:!1,filterState:!1,stateId:-1,error:""},c.editedTodo=null,c.deleteTodo=function(a){b.delete({id:a.id||"complete"}).$promise.then(function(a){c.state.justDeleted=!0,c.refresh()}).catch(function(a){c.handleError(a,"delete item(s)")})},c.doneTodo=function(a){b.update({id:a.id},{isComplete:!0}),c.refresh()},c.updateTodo=function(a,b){c.editedTodo=b,c.originalTodo=angular.extend({},b),setTimeout(function(){a.target.parentNode.getElementsByClassName("edit")[0].focus()},200)},c.updateDB=function(a){b.update({id:a.id},{title:a.title}),c.refresh()},c.handleError=function(a,b){a&&(c.state.error="Failed to "+b+". Server returned "+a.status+" - "+a.statusText)},c.getTab=function(a){var b={complete:{filterS:!0,complete:"active",onGoing:"",all:""},onGoing:{filterS:!1,complete:"",onGoing:"active",all:""},all:{filterS:"",complete:"",onGoing:"",all:"active"}};c.state.filterState=b[a].filterS,c.nav.complete.class=b[a].complete,c.nav.onGoing.class=b[a].onGoing,c.nav.all.class=b[a].all},c.refreshCounts=function(){c.nav.all.size=c.todos.length,c.nav.complete.size=c.todos.filter(function(a){return a.isComplete}).length,c.nav.onGoing.size=c.nav.all.size-c.nav.complete.size},c.refresh=function(){b.query(function(a){c.todos=a,c.refreshCounts()}).$promise.then(function(a){c.state.placeholderClassName="hidden"}).catch(function(a){c.handleError(a,"get list")})},c.hideUndoSpan=function(){c.state.justDeleted=!1},c.undoDelete=function(){b.update({id:"undo"},function(){c.hideUndoSpan(),c.refresh()})},c.refresh(),function d(){b.get({id:"state"}).$promise.then(function(a){a.state!==c.state.stateId&&(c.state.stateId=a.state,c.refresh()),"offline..."===c.state.error&&(c.state.error="")}).catch(function(a){c.state.error="offline..."}),a(d,1e3)}()}]),angular.module("todoApp").controller("navCtrl",["Todo",function(a){}]),angular.module("todoApp").controller("newPostCtrl",["Todo",function(a){var b=this;b.newTodoField="",b.addTodo=function(){var c={title:b.newTodoField.trim(),isComplete:!1};c.title&&a.save(c).$promise.then(function(a){b.newTodoField="",b.refresh()}).catch(function(a){b.handleError(a,"create item")})}}]),angular.module("todoApp").controller("mainCtrl",["$timeout","Todo",function(a,b){}]);